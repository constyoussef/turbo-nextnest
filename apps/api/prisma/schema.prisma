generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  name     String
  email    String  @unique
  password String
  bio      String?
  avatar   String?

  posts    Post[]
  comments Comment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  likes     Like[]

  @@map("users")
}

model Post {
  id        Int     @id @default(autoincrement())
  slug      String? @unique
  title     String
  content   String
  thumbnail String?
  published Boolean @default(false)

  author   User? @relation(fields: [authorId], references: [id])
  authorId Int

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  comments  Comment[]
  tags      Tag[]     @relation("PostTags")
  likes     Like[]

  @@map("posts")
}

model Comment {
  id        Int     @id @default(autoincrement())
  content   String
  published Boolean @default(false)

  post     Post? @relation(fields: [postId], references: [id])
  postId   Int
  author   User? @relation(fields: [authorId], references: [id])
  authorId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("comments")
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String

  posts Post[] @relation("PostTags")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("tags")
}

model Like {
  id Int @id @default(autoincrement())

  author   User? @relation(fields: [authorId], references: [id])
  authorId Int
  post     Post? @relation(fields: [postId], references: [id])
  postId   Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("likes")
}
